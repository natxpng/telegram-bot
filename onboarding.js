// onboarding.js
require('dotenv').config();
const { salvarTriagemNotion } = require('./notion');

const perguntasOnboarding = [
  'Qual seu nome?', // Etapa 0
  'Qual sua renda mensal? (Digite apenas n칰meros, ex: 3000)', // Etapa 1
  'Qual o total de gastos fixos mensais? (ex: 1200)', // Etapa 2
  'Qual o total de gastos vari치veis mensais? (ex: 800)', // Etapa 3
  'Qual sua meta de poupan칞a mensal? (ex: 500)' // Etapa 4
];

// Este objeto s칩 armazena usu치rios ENQUANTO est칚o no processo de 5 perguntas.
const usuariosEmOnboarding = {};

// Helper para validar entradas num칠ricas
function parseNumber(input) {
  const num = parseFloat(input.replace(',', '.'));
  return isNaN(num) ? null : num;
}

/**
 * Gerencia o fluxo de onboarding de novos usu치rios.
 * @param {object} bot - Inst칙ncia do TelegramBot
 * @param {number} chatId - ID do chat
 * @param {string} texto - Mensagem do usu치rio
 * @param {object | null} dadosUsuario - Dados do Notion (null se for novo)
 * @returns {boolean} - Retorna 'true' se a mensagem foi tratada aqui
 */
async function handleOnboarding(bot, chatId, texto, dadosUsuario) {

  // 1. Comando /start
  if (texto === '/start') {
    if (dadosUsuario) {
      // Usu치rio j치 existe, mas quer recome칞ar
      bot.sendMessage(chatId, `Ol치, ${dadosUsuario['Nome do Usu치rio']?.title?.[0]?.text?.content || 'Usu치rio'}! Vamos recome칞ar seu onboarding.`);
      // TODO: Voc칡 pode adicionar uma l칩gica para apagar os dados antigos do Notion se quiser
    } else {
      // Usu치rio novo
      bot.sendMessage(chatId, "Ol치! Sou seu assistente financeiro. Vamos come칞ar com algumas perguntas.");
    }
    
    // (Re)inicia o processo na mem칩ria
    usuariosEmOnboarding[chatId] = { etapa: 0, respostas: [] };
    bot.sendMessage(chatId, perguntasOnboarding[0]);
    return true; // Mensagem tratada
  }

  // 2. Verifica se o usu치rio est치 no meio do processo
  const state = usuariosEmOnboarding[chatId];
  if (!state) {
    // N칚o est치 no onboarding.
    // Se ele tamb칠m n칚o existe no Notion (verificado no server.js), 
    // ele 칠 um usu치rio novo que n칚o digitou /start.
    if (!dadosUsuario) {
       bot.sendMessage(chatId, "Ol치! Parece que 칠 sua primeira vez aqui. Por favor, digite /start para iniciarmos seu cadastro.");
       return true; // Mensagem tratada
    }
    // Se ele n칚o est치 no onboarding E existe no Notion, n칚o faz nada.
    return false; // Deixa a mensagem seguir para handleGasto, etc.
  }
  
  // --- Daqui para baixo, o usu치rio EST츼 no meio do onboarding ---

  // 3. Valida a resposta
  const etapaAtual = state.etapa;
  let valorInput = texto;

  // Etapas 1, 2, 3, 4 (renda, fixos, etc.) devem ser n칰meros
  if (etapaAtual > 0 && etapaAtual < perguntasOnboarding.length) {
    const valorNum = parseNumber(texto);
    if (valorNum === null) {
      // Input inv치lido, pergunta de novo
      bot.sendMessage(chatId, `Opa! Esse valor n칚o parece ser um n칰mero.\n\n${perguntasOnboarding[etapaAtual]}`);
      return true; // Mensagem tratada (n칚o avan칞a a etapa)
    }
    valorInput = valorNum; // Usa o n칰mero validado
  }
  
  // 4. Salva a resposta e avan칞a a etapa
  state.respostas.push(valorInput);
  state.etapa++;

  // 5. Verifica se o onboarding terminou
  if (state.etapa < perguntasOnboarding.length) {
    // N칚o terminou, faz a pr칩xima pergunta
    bot.sendMessage(chatId, perguntasOnboarding[state.etapa]);
  } else {
    // Terminou! Salva no Notion
    const [nome, renda, fixos, variaveis, poupanca] = state.respostas;
    
    try {
      // TODO: Adicionar l칩gica para ATUALIZAR (update) caso o usu치rio j치 exista (via /start)
      await salvarTriagemNotion({ chatId, nome, renda, fixos, variaveis, poupanca });
      bot.sendMessage(chatId, 'Onboarding finalizado! 游꿀\n\nAgora voc칡 pode registrar gastos (ex: "gastei 50 no mercado") ou tirar d칰vidas financeiras.');
      
      // CR칈TICO: Limpa o usu치rio da mem칩ria
      delete usuariosEmOnboarding[chatId];
      
    } catch (error) {
      console.error("Erro ao salvar triagem no Notion:", error);
      bot.sendMessage(chatId, "Ocorreu um erro ao salvar seus dados. Por favor, tente digitar /start novamente.");
      // N칚o limpa da mem칩ria, deixa ele tentar salvar de novo
    }
  }
  
  return true; // Mensagem tratada
}

// N칚o exportamos mais a vari치vel 'usuarios'
module.exports = { handleOnboarding };